{"version":3,"file":"index-9Xo_fvxB.js","sources":["../../../../pages/inspiration/index.vue","../../../../pages/inspiration/index.vue"],"sourcesContent":["<template>\r\n  <div >\r\n\r\n    <h1>Inspiration</h1>\r\n\r\n    <div class=\"app-base-border-radius app-base-margin-top-bottom\" style=\"width: 100%\"/>\r\n\r\n    <div class=\"masonry\">\r\n      <div v-for=\"item in images\" class=\"mItem\">\r\n        <div class=\"mItem-body\">\r\n          <img :src=\"item.img\" alt=\"\"/>\r\n          <div class=\"mItem-body-info\">\r\n\r\n            <a :href=\"item.img\" download>Download</a>\r\n            <span @click=\"copyPrompt(item.prompt)\">Copy prompt</span>\r\n\r\n<!--            <div v-if=\"item?.face?.id\">-->\r\n<!--              <img style=\"width: 40px;height: 40px;border-radius: 50%\" :src=\"item?.face?.coverImageUrl\">-->\r\n<!--              {{ item?.face?.faceName }}-->\r\n<!--            </div>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useAuthStore } from '~/composables/stores/useAuthStore';\r\nimport {apiFetchGet, useApiFetch} from '#imports';\r\nimport {ref, reactive} from 'vue';\r\nimport {SearchForm} from '~/model/search.form';\r\nimport {PaginationResult} from '~/model/pagination.result';\r\nimport { copyText } from 'vue3-clipboard'\r\n\r\ndefinePageMeta({  });\r\n\r\nexport default {\r\n  components: {},\r\n  setup() {\r\n    const store = useAuthStore();\r\n    const runtimeConfig = useRuntimeConfig()\r\n\r\n    const searchResult = ref<PaginationResult>(new PaginationResult());\r\n    const searchForm = ref<SearchForm>(new SearchForm());\r\n\r\n    const getList = async (params: SearchForm) => {\r\n      searchForm.value = params;\r\n      searchResult.value = await apiFetchGet<PaginationResult>('/faceImageGeneration/exampleList', searchForm.value);\r\n    };\r\n\r\n    getList(searchForm.value);\r\n\r\n    const images = computed(() => {\r\n      const res: Array<any> = []\r\n      searchResult.value.items.forEach((v: any) => {\r\n\r\n        const face = {\r\n          id: v?.face?.id || null,\r\n          faceName: v?.face?.faceName || null,\r\n          coverImageUrl: v?.face?.coverImageUrl || null,\r\n        }\r\n\r\n        v.images.forEach((img: string) => {\r\n          const obj = {\r\n            aspectRatio: v.aspectRatio,\r\n            prompt: v.prompt,\r\n            img: img,\r\n            face: face,\r\n          }\r\n\r\n          res.push(obj)\r\n        })\r\n\r\n      })\r\n      return res\r\n    })\r\n\r\n    const copyPrompt = (str: string) => {\r\n      copyText(str, undefined, (error: any, event: any) => {\r\n        if (error) {\r\n          console.log(error)\r\n        } else {\r\n          console.log(str, event)\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    return {\r\n      store,\r\n      searchForm,\r\n      searchResult,\r\n      getList,\r\n      images,\r\n      copyPrompt,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n.mItem-body {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n.mItem-body-info {\r\n  width: 100%;\r\n  position: absolute;\r\n  z-index: 9999;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  padding: 7px;\r\n}\r\n\r\nimg {\r\n  width: 100%;\r\n}\r\n\r\n.masonry {\r\n  column-count: 3;\r\n  column-gap: 16px;\r\n}\r\n\r\n.masonry .mItem {\r\n  position: relative;\r\n  display: inline-block;\r\n  margin-bottom: 16px;\r\n  width: 100%;\r\n}\r\n\r\n@media (max-width: 1199px) {\r\n  .masonry {\r\n    column-count: 3;\r\n  }\r\n}\r\n\r\n@media (max-width: 991px) {\r\n  .masonry {\r\n    column-count: 2;\r\n  }\r\n}\r\n\r\n@media (max-width: 767px) {\r\n  .masonry {\r\n    column-count: 1;\r\n  }\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div >\r\n\r\n    <h1>Inspiration</h1>\r\n\r\n    <div class=\"app-base-border-radius app-base-margin-top-bottom\" style=\"width: 100%\"/>\r\n\r\n    <div class=\"masonry\">\r\n      <div v-for=\"item in images\" class=\"mItem\">\r\n        <div class=\"mItem-body\">\r\n          <img :src=\"item.img\" alt=\"\"/>\r\n          <div class=\"mItem-body-info\">\r\n\r\n            <a :href=\"item.img\" download>Download</a>\r\n            <span @click=\"copyPrompt(item.prompt)\">Copy prompt</span>\r\n\r\n<!--            <div v-if=\"item?.face?.id\">-->\r\n<!--              <img style=\"width: 40px;height: 40px;border-radius: 50%\" :src=\"item?.face?.coverImageUrl\">-->\r\n<!--              {{ item?.face?.faceName }}-->\r\n<!--            </div>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useAuthStore } from '~/composables/stores/useAuthStore';\r\nimport {apiFetchGet, useApiFetch} from '#imports';\r\nimport {ref, reactive} from 'vue';\r\nimport {SearchForm} from '~/model/search.form';\r\nimport {PaginationResult} from '~/model/pagination.result';\r\nimport { copyText } from 'vue3-clipboard'\r\n\r\ndefinePageMeta({  });\r\n\r\nexport default {\r\n  components: {},\r\n  setup() {\r\n    const store = useAuthStore();\r\n    const runtimeConfig = useRuntimeConfig()\r\n\r\n    const searchResult = ref<PaginationResult>(new PaginationResult());\r\n    const searchForm = ref<SearchForm>(new SearchForm());\r\n\r\n    const getList = async (params: SearchForm) => {\r\n      searchForm.value = params;\r\n      searchResult.value = await apiFetchGet<PaginationResult>('/faceImageGeneration/exampleList', searchForm.value);\r\n    };\r\n\r\n    getList(searchForm.value);\r\n\r\n    const images = computed(() => {\r\n      const res: Array<any> = []\r\n      searchResult.value.items.forEach((v: any) => {\r\n\r\n        const face = {\r\n          id: v?.face?.id || null,\r\n          faceName: v?.face?.faceName || null,\r\n          coverImageUrl: v?.face?.coverImageUrl || null,\r\n        }\r\n\r\n        v.images.forEach((img: string) => {\r\n          const obj = {\r\n            aspectRatio: v.aspectRatio,\r\n            prompt: v.prompt,\r\n            img: img,\r\n            face: face,\r\n          }\r\n\r\n          res.push(obj)\r\n        })\r\n\r\n      })\r\n      return res\r\n    })\r\n\r\n    const copyPrompt = (str: string) => {\r\n      copyText(str, undefined, (error: any, event: any) => {\r\n        if (error) {\r\n          console.log(error)\r\n        } else {\r\n          console.log(str, event)\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    return {\r\n      store,\r\n      searchForm,\r\n      searchResult,\r\n      getList,\r\n      images,\r\n      copyPrompt,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n.mItem-body {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n.mItem-body-info {\r\n  width: 100%;\r\n  position: absolute;\r\n  z-index: 9999;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  padding: 7px;\r\n}\r\n\r\nimg {\r\n  width: 100%;\r\n}\r\n\r\n.masonry {\r\n  column-count: 3;\r\n  column-gap: 16px;\r\n}\r\n\r\n.masonry .mItem {\r\n  position: relative;\r\n  display: inline-block;\r\n  margin-bottom: 16px;\r\n  width: 100%;\r\n}\r\n\r\n@media (max-width: 1199px) {\r\n  .masonry {\r\n    column-count: 3;\r\n  }\r\n}\r\n\r\n@media (max-width: 991px) {\r\n  .masonry {\r\n    column-count: 2;\r\n  }\r\n}\r\n\r\n@media (max-width: 767px) {\r\n  .masonry {\r\n    column-count: 1;\r\n  }\r\n}\r\n\r\n</style>\r\n"],"names":["_ssrRenderAttrs","_ssrRenderStyle","_ssrRenderAttr"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,MAAe,YAAA;AAAA,EACb,YAAY,CAAC;AAAA,EACb,QAAQ;AACN,UAAM,QAAQ,aAAa;AAG3B,UAAM,eAAe,IAAsB,IAAI,kBAAkB;AACjE,UAAM,aAAa,IAAgB,IAAI,YAAY;AAE7C,UAAA,UAAU,OAAO,WAAuB;AAC5C,iBAAW,QAAQ;AACnB,mBAAa,QAAQ,MAAM,YAA8B,oCAAoC,WAAW,KAAK;AAAA,IAC/G;AAEA,YAAQ,WAAW,KAAK;AAElB,UAAA,SAAS,SAAS,MAAM;AAC5B,YAAM,MAAkB,CAAC;AACzB,mBAAa,MAAM,MAAM,QAAQ,CAAC,MAAW;;AAE3C,cAAM,OAAO;AAAA,UACX,MAAI,4BAAG,SAAH,mBAAS,OAAM;AAAA,UACnB,YAAU,4BAAG,SAAH,mBAAS,aAAY;AAAA,UAC/B,iBAAe,4BAAG,SAAH,mBAAS,kBAAiB;AAAA,QAC3C;AAEE,UAAA,OAAO,QAAQ,CAAC,QAAgB;AAChC,gBAAM,MAAM;AAAA,YACV,aAAa,EAAE;AAAA,YACf,QAAQ,EAAE;AAAA,YACV;AAAA,YACA;AAAA,UACF;AAEA,cAAI,KAAK,GAAG;AAAA,QAAA,CACb;AAAA,MAAA,CAEF;AACM,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,aAAa,CAAC,QAAgB;AAClC,eAAS,KAAK,QAAW,CAAC,OAAY,UAAe;AACnD,YAAI,OAAO;AACT,kBAAQ,IAAI,KAAK;AAAA,QAAA,OACZ;AACG,kBAAA,IAAI,KAAK,KAAK;AAAA,QAAA;AAAA,MACxB,CACD;AAAA,IACH;AAGO,WAAA;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EAAA;AAEJ;ACnGA,SAAA,eAAA,MAAA,OAAA,SAAA,QAAA,QAAA,QAAA,OAAA,UAAA;eAAAA,eAKmE,MAAA,CAAA,8FALnEC,eAQ0B,EAAA,SAAA,QAR1B,CAAA,uCAAA;gBAAA,OAUgB,QAAS,CAAC,SAAG;4DAV7BC,cAagB,OAAI,KAAM,GAAC,CAb3B,0CAAAA,cAAA,QAAA,KAAA,GAAA,CAAA,kEAAA;AAAA,EAAA,CAAA;;;;;;;;;;"}