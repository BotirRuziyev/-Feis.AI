{"file":"index-BZwXQnlr.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,MAAe,YAAA;AAAA,EACb,QAAQ;AACN,UAAM,QAAQ,aAAa;AAE3B,UAAM,eAAe,IAAsB,IAAI,kBAAkB;AACjE,UAAM,aAAa,IAAoB,IAAI,YAAY;AACvD,eAAW,MAAM,QAAQ;AAEnB,UAAA,UAAU,OAAO,WAAuB;AAC5C,iBAAW,QAAQ;AACnB,mBAAa,QAAQ,MAAM,YAA8B,wBAAwB,WAAW,KAAK;AAAA,IACnG;AAEA,YAAQ,WAAW,KAAK;AAElB,UAAA,aAAa,OAAO,OAAsB;AACxC,YAAA,EAAC,MAAM,MAAS,IAAA,MAAM,YAAiB,gCAAgC,EAAE,IAAI,SAAS,EAAE;AAE1F,UAAA,CAAC,MAAM,OAAO;AAChB,qBAAa,MAAM,MAAM;AAAA,UACvB,aAAa,MAAM,MAAM,UAAU,OAAK,EAAE,OAAO,KAAK,MAAM,EAAE;AAAA,UAC9D;AAAA,UACA,EAAC,GAAG,KAAK,MAAK;AAAA,QAChB;AAAA,MAAA;AAAA,IAEJ;AAEO,WAAA;AAAA,MACL;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAEF;AAAA,EAAA;AAEJ;;;;;;ACzGA,QAAA,4BAAAA;AAIW,QAAA,OAAAC,eAAA,MAAA,CAAA,GAAA;;IACC,MAAA,OAAA,aAAA;AAAA,IACN,QAAA;AAAA;EAyCS,GAAA;AAAA,IA/Cf,SAAAC,QAAA,CAAA,GAAA,QAAA,UAAA,aAAA;;AAAA,eAAAC,mBAAA,4BAAA,EAAA,MAAA,SAAA,GAAA;AAAA,UAAA,SAAAD,QAAA,CAAA,EAAA,IAAA,GAAA,QAAA,UAAA,cAAA;;;;AAAA,uBAAA,eAAAE,eAAA,EAAA,WAAA,MAAA,CAAA,CAAA,IAAA,SAAA,GAAA;;kBAc2B,OAAA,EAAA,SAAA,SAAA,UAAA,QAAA;AAAA,kBACE,KAAA;AAAA,kBAf7B,KAAA;AAAA,gBAAA,GAAA,MAAA,UAAA,SAAA,CAAA;AAAA,uBAAA,QAAA;AAAA,cAAA,CAAA;AAAAC,qBAAAA,oBAAAA,SAAAA,iBAAAA,SAAAA,IAAAA,eAAAA,GAAAA,CAAAA,cAAAA;AAAAA,YASU,OAAA;AACE,qBAAA;AAAA,gBAAAC,YAAA,OAAA,EAAA,OAAA,EAAA,WAAA,MAAA,KAAA;AAAA,kBAMQA,YAAA,OAAA,EAAA,OAAA,EAAA,WAAA,QAAA,aAAA,OAAA,KAAA;AAAA,qBALyBC,UAAA,IAAA,GAAAC,YAAAC,UAAA,MAAAC,WAAA,IAAA,QAAA,CAAA,QAAA;;wBAESJ,YAAA,qBAAA;AAAA,0BAC3B,OAAA,EAAA,SAAA,SAAA,UAAA,QAAA;AAAA,0BACE,KAAA;AAAA;;;oBAGjB,CAAA,GAAA,GAAA;AAAA,kBAAA,CAAA;AAAA,kBACAA,YAAA,MAAA,MAAA,MAAA;AAAA;;;YAnBZ;AAAA,UAAA,CAAA;AAAA,UAAA,GAAA;AAAA,QAAA,GAAA,UAAA,QAAA,CAAA;;UAuB2C,MAAA;AAAA,UAAM,OAAA;AAAA,UAvBjD,OAAA;AAAA,QAAA,GAAA,MAAA,UAAA,QAAA,CAAA;;UAwBkD,MAAA;AAAA;QACxB,GAAA;AAAA,UACL,SAAAJ,QAAA,CAAA,EAAA,IAAA,GAAA,QAAA,UAAA,cAAA;;;AA1BrB,mBAAA,gCAAA,SAAA,mBAAA,IAAA;AAAAG,uBAAAA,OAAAA,SAAAA,gBAAAA,gBAAAA,gCAAAA,SAAAA,mBAAAA,QAAAA,CAAAA,MAAAA,SAAAA,cAAAA,gBAAAA,gCAAAA,SAAAA,mBAAAA,EAAAA,CAAAA,QAAAA;AAAAA,cAAA,OAAA;;;YA0BqB,OAAA;;kBA1BrB,gCAAA,SAAA,mBAAA,OAAAE,UAAA,GAAAC,YAAA,OAAA,EAAA,KAAA,KAAA;AAAA,kBA2BoDG,gBAAA,iBAAAC,iBAAA,gCAAA,SAAA,mBAAA,QAAA,GAAA,CAAA;AAAA,kBACfN,YAAA,IAAA;AAAA,kBAE3BK,gBAAA,eAAAC,iBAAA,gCAAA,SAAA,mBAAA,EAAA,GAAA,CAAA;AAAA,gBAEA,CAAA,MAAAL,UAAA,GAAAC,YAAA,QAAA,EAAA,KAAA,EAAA,GAAA,WAAA;AAAA;YAhCV;AAAA,UAAA,CAAA;AAAA,UAAA,GAAA;AAAA,QAAA,GAAA,UAAA,QAAA,CAAA;;UAmCqD,MAAA;AAAA,UAnCrD,OAAA;AAAA,QAAA,GAAA,MAAA,UAAA,QAAA,CAAA;;UAoCmD,MAAA;AAAA,UApCnD,OAAA;AAAA,QAAA,GAAA,MAAA,UAAA,QAAA,CAAA;;UAqC4D,MAAA;AAAA,UArC5D,OAAA;AAAA,QAAA,GAAA,MAAA,UAAA,QAAA,CAAA;;UAsCyD,MAAA;AAAA,UAtCzD,OAAA;AAAA,QAAA,GAAA,MAAA,UAAA,QAAA,CAAA;;UAuCqD,MAAA;AAAA;QAC3B,GAAA;AAAA;;;gBACqC,SAAA,CAAA,WAAA,OAAA,WAAA,IAAA,EAAA;AAAA,gBAzC/D,MAAA;AAAA,cAAA,GAAA;AAAA,gBA0CwB,SAAAN,QAAA,CAAA,IAAA,QAAA,UAAA,cAAA;;;AA1CxB,6BAAA,QAAA,SAAA,aAAA;AAAA,oBAAA,OAAA;;;kBA0CwB,OAAA;;;;kBA1CxB;AAAA,gBAAA,CAAA;AAAA;;YAyCU,OAAA;AAAY,qBAAA;AAAA,gBAAAI,YAAA,sBAAA;AAAA,kBAAyC,SAAA,CAAA,WAAA,OAAA,WAAA,IAAA,EAAA;AAAA,kBAzC/D,MAAA;AAAA,gBAAA,GAAA;AAAA,kBA0CY,SAAAJ,QAAA,MAAA;AAAA,oBAAA,IAAA,WAAAK,UAAA,GAAAC,YAAA,QAAA,EAAA,KAAA,EAAA,GAAA,KAAA,MAAAD,UAAA,GAAAC,YAAA,QAAA,EAAA,KAAA,EAAA,GAAA,aAAA;AAAA,kBA1CZ,CAAA;AAAA;;;YAAA;AAAA,UAAA,CAAA;AAAA;;MAOM,OAAA;AACa,eAAA;AAAA,UAAAF,YAAA,4BAAA,EAAA,MAAA,SAAA,GAAA;AAAA,YACiB,SAAAJ,QAAA,CAAA,EAAA,UAAA;AAAA,cACmBI,YAAA,OAAA,EAAA,OAAA,EAAA,WAAA,MAAA,KAAA;AAAA,gBAMnCA,YAAA,OAAA,EAAA,OAAA,EAAA,WAAA,QAAA,aAAA,OAAA,KAAA;AAAA,mBALyBC,UAAA,IAAA,GAAAC,YAAAC,UAAA,MAAAC,WAAA,IAAA,QAAA,CAAA,QAAA;;sBAESJ,YAAA,qBAAA;AAAA,wBAC3B,OAAA,EAAA,SAAA,SAAA,UAAA,QAAA;AAAA,wBACE,KAAA;AAAA;;;kBAGjB,CAAA,GAAA,GAAA;AAAA,gBAAA,CAAA;AAAA,gBACAA,YAAA,MAAA,MAAA,MAAA;AAAA;cAnBZ,CAAA;AAAA,YAAA,CAAA;AAAA,YAuBM,GAAA;AAAA,UAAA,CAAA;AAAA,UAAqCA,YAAA,4BAAA;AAAA,YAAA,MAAA;AAAA,YAAM,OAAA;AAAA,YAC3C,OAAA;AAAA,UAAA,CAAA;AAAA;YAA4C,MAAA;AAAA;UACxB,GAAA;AAAA,YAChB,SAAAJ,QAAA,CAAA,EAAA,UAAA;;AAAA;AAAA,kBAAA,gCAAA,SAAA,mBAAA,OAAAK,UAAA,GAAAC,YAAA,OAAA,EAAA,KAAA,KAAA;AAAA,kBAC0CG,gBAAA,iBAAAC,iBAAA,gCAAA,SAAA,mBAAA,QAAA,GAAA,CAAA;AAAA,kBACfN,YAAA,IAAA;AAAA,kBAE3BK,gBAAA,eAAAC,iBAAA,gCAAA,SAAA,mBAAA,EAAA,GAAA,CAAA;AAAA,gBAEA,CAAA,MAAAL,UAAA,GAAAC,YAAA,QAAA,EAAA,KAAA,EAAA,GAAA,WAAA;AAAA,cAhCV;AAAA,aAAA;AAAA,YAmCM,GAAA;AAAA,UAAA,CAAA;AAAA;YAA+C,MAAA;AAAA,YAC/C,OAAA;AAAA,UAAA,CAAA;AAAA;YAA6C,MAAA;AAAA,YAC7C,OAAA;AAAA,UAAA,CAAA;AAAA;YAAsD,MAAA;AAAA,YACtD,OAAA;AAAA,UAAA,CAAA;AAAA;YAAmD,MAAA;AAAA,YACnD,OAAA;AAAA,UAAA,CAAA;AAAA;YAA+C,MAAA;AAAA;UAC3B,GAAA;AAAA,YACJ,SAAAN,QAAA,CAAA,EAAA,UAAA;AAAA,cAAOI,YAAA,sBAAA;AAAA,gBAAkC,SAAA,CAAA,WAAA,OAAA,WAAA,IAAA,EAAA;AAAA,gBAzC/D,MAAA;AAAA,cAAA,GAAA;AAAA,gBA0CY,SAAAJ,QAAA,MAAA;AAAA,kBAAA,IAAA,WAAAK,UAAA,GAAAC,YAAA,QAAA,EAAA,KAAA,EAAA,GAAA,KAAA,MAAAD,UAAA,GAAAC,YAAA,QAAA,EAAA,KAAA,EAAA,GAAA,aAAA;AAAA,gBA1CZ,CAAA;AAAA;cAAA,GAAA,MAAA,CAAA,SAAA,CAAA;AAAA,YAAA,CAAA;AAAA;;;MAAA;AAAA,IAAA,CAAA;AAAA,IAAA,GAAA;AAAA,EAAA,GAAA,OAAA,CAAA;;IAgD2D,QAAA,OAAA;AAAA,IAhD3D,UAAA,OAAA;AAAA,EAAA,GAAA,MAAA,OAAA,CAAA;;;;;;;;;;","names":["__nuxt_component_4","_ssrRenderAttrs","_withCtx","_ssrRenderComponent","_ssrRenderStyle","_scopeId","_createVNode","_openBlock","_createBlock","_Fragment","_renderList","_createTextVNode","_toDisplayString"],"sources":["../../../../pages/admin/face-image-generation/index.vue","../../../../pages/admin/face-image-generation/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <el-table\r\n      :data=\"searchResult.items\"\r\n      border\r\n      style=\"width: 100%; margin-top: 15px\">\r\n      <el-table-column type=\"expand\">\r\n        <template #default=\"{ row }\">\r\n          <div style=\"padding: 5px;\">\r\n            <div style=\"display: flex;flex-wrap: wrap;\">\r\n              <div v-for=\"img in row.images\" style=\"padding: 5px;\">\r\n                <el-image\r\n                  style=\"width: 200px; height: 200px;\"\r\n                  :src=\"img\"\r\n                  fit=\"cover\" />\r\n              </div>\r\n            </div>\r\n            <h1>Data</h1>\r\n            <pre>{{ row }}</pre>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"60px\"/>\r\n      <el-table-column prop=\"face.id\" label=\"Face\">\r\n        <template #default=\"{ row }\">\r\n          <div v-if=\"row?.face?.id\">\r\n            Face name: {{ row?.face?.faceName }}<br>\r\n            Face id: {{ row?.face?.id }}\r\n          </div>\r\n          <span v-else>\r\n            No Face\r\n          </span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"user.email\" label=\"User\"/>\r\n      <el-table-column prop=\"prompt\" label=\"prompt\"/>\r\n      <el-table-column prop=\"status\" label=\"triggeredPrompt\" />\r\n      <el-table-column prop=\"createdAt\" label=\"createdAt\"/>\r\n      <el-table-column prop=\"example\" label=\"Example\">\r\n        <template #default=\"{ row }\">\r\n          <el-button @click=\"setExample(row.id)\" type=\"success\">\r\n            <span v-if=\"row.example\">Yes</span>\r\n            <span v-else>Set example</span>\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <app-pagination :params=\"searchResult\" @change=\"getList\"/>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {apiFetchGet, useApiFetch} from '#imports';\r\nimport {ref} from 'vue';\r\nimport {SearchForm} from '~/model/search.form';\r\nimport {PaginationResult} from '~/model/pagination.result';\r\nimport {useAuthStore} from '~/composables/stores/useAuthStore';\r\n\r\ndefinePageMeta({\r\n  menu: {\r\n    sort: 3,\r\n    title: 'Face image generation',\r\n    icon: 'fa-solid fa-circle',\r\n  },\r\n});\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useAuthStore();\r\n\r\n    const searchResult = ref<PaginationResult>(new PaginationResult());\r\n    const searchForm = ref<SearchForm|any>(new SearchForm());\r\n    searchForm.value.admin = true\r\n\r\n    const getList = async (params: SearchForm) => {\r\n      searchForm.value = params;\r\n      searchResult.value = await apiFetchGet<PaginationResult>('/faceImageGeneration', searchForm.value);\r\n    };\r\n\r\n    getList(searchForm.value);\r\n\r\n    const setExample = async (id: string|number) => {\r\n      const {data, error} = await useApiFetch<any>(`/faceImageGeneration/example/${id}`, 'PATCH', {});\r\n\r\n      if (!error.value) {\r\n        searchResult.value.items.splice(\r\n          searchResult.value.items.findIndex(v => v.id === data.value.id),\r\n          1,\r\n          {...data.value}\r\n        )\r\n      }\r\n    }\r\n\r\n    return {\r\n      store,\r\n\r\n      searchForm,\r\n      searchResult,\r\n      getList,\r\n      setExample,\r\n\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n","<template>\r\n  <div>\r\n\r\n    <el-table\r\n      :data=\"searchResult.items\"\r\n      border\r\n      style=\"width: 100%; margin-top: 15px\">\r\n      <el-table-column type=\"expand\">\r\n        <template #default=\"{ row }\">\r\n          <div style=\"padding: 5px;\">\r\n            <div style=\"display: flex;flex-wrap: wrap;\">\r\n              <div v-for=\"img in row.images\" style=\"padding: 5px;\">\r\n                <el-image\r\n                  style=\"width: 200px; height: 200px;\"\r\n                  :src=\"img\"\r\n                  fit=\"cover\" />\r\n              </div>\r\n            </div>\r\n            <h1>Data</h1>\r\n            <pre>{{ row }}</pre>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"60px\"/>\r\n      <el-table-column prop=\"face.id\" label=\"Face\">\r\n        <template #default=\"{ row }\">\r\n          <div v-if=\"row?.face?.id\">\r\n            Face name: {{ row?.face?.faceName }}<br>\r\n            Face id: {{ row?.face?.id }}\r\n          </div>\r\n          <span v-else>\r\n            No Face\r\n          </span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"user.email\" label=\"User\"/>\r\n      <el-table-column prop=\"prompt\" label=\"prompt\"/>\r\n      <el-table-column prop=\"status\" label=\"triggeredPrompt\" />\r\n      <el-table-column prop=\"createdAt\" label=\"createdAt\"/>\r\n      <el-table-column prop=\"example\" label=\"Example\">\r\n        <template #default=\"{ row }\">\r\n          <el-button @click=\"setExample(row.id)\" type=\"success\">\r\n            <span v-if=\"row.example\">Yes</span>\r\n            <span v-else>Set example</span>\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <app-pagination :params=\"searchResult\" @change=\"getList\"/>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport {apiFetchGet, useApiFetch} from '#imports';\r\nimport {ref} from 'vue';\r\nimport {SearchForm} from '~/model/search.form';\r\nimport {PaginationResult} from '~/model/pagination.result';\r\nimport {useAuthStore} from '~/composables/stores/useAuthStore';\r\n\r\ndefinePageMeta({\r\n  menu: {\r\n    sort: 3,\r\n    title: 'Face image generation',\r\n    icon: 'fa-solid fa-circle',\r\n  },\r\n});\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useAuthStore();\r\n\r\n    const searchResult = ref<PaginationResult>(new PaginationResult());\r\n    const searchForm = ref<SearchForm|any>(new SearchForm());\r\n    searchForm.value.admin = true\r\n\r\n    const getList = async (params: SearchForm) => {\r\n      searchForm.value = params;\r\n      searchResult.value = await apiFetchGet<PaginationResult>('/faceImageGeneration', searchForm.value);\r\n    };\r\n\r\n    getList(searchForm.value);\r\n\r\n    const setExample = async (id: string|number) => {\r\n      const {data, error} = await useApiFetch<any>(`/faceImageGeneration/example/${id}`, 'PATCH', {});\r\n\r\n      if (!error.value) {\r\n        searchResult.value.items.splice(\r\n          searchResult.value.items.findIndex(v => v.id === data.value.id),\r\n          1,\r\n          {...data.value}\r\n        )\r\n      }\r\n    }\r\n\r\n    return {\r\n      store,\r\n\r\n      searchForm,\r\n      searchResult,\r\n      getList,\r\n      setExample,\r\n\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n"],"version":3}