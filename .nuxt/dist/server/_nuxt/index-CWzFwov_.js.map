{"version":3,"file":"index-CWzFwov_.js","sources":["../../../../components/app-square-image.vue","../../../../components/app-square-image.vue","../../../../pages/myFaces/index.vue","../../../../virtual:public?%2Ficon%2Ficon-plus.png","../../../../pages/myFaces/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-face-item\" :style=\"{height: height+'px'}\" ref=\"ele\" >\r\n    <el-image\r\n      :src=\"img\"\r\n      style=\"width: 100%;\"\r\n      :style=\"{height: height+'px'}\"\r\n      fit=\"cover\"\r\n      loading=\"eager\"/>\r\n<!--    <slot name=\"error\">123</slot>-->\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useElementSize } from '@vueuse/core'\r\nimport {ref, reactive, useTemplateRef, onMounted} from 'vue';\r\n\r\nexport default {\r\n  name: 'app-square-image',\r\n  props: ['img'],\r\n  setup() {\r\n    const height = ref(null)\r\n    const input = useTemplateRef('ele')\r\n    onMounted(() => {\r\n      const e = document.getElementsByClassName('my-face-item')[0]\r\n      height.value = input?.value?.offsetWidth\r\n    })\r\n\r\n    return {\r\n      height,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.my-face-item {\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  background: #9f9f87;\r\n  //background: url(\"/public/face_images/1/3/1.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n.el-image__error {\r\n  display: none!important;\r\n}\r\n.el-image {\r\n  background: var(--app-black);\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"my-face-item\" :style=\"{height: height+'px'}\" ref=\"ele\" >\r\n    <el-image\r\n      :src=\"img\"\r\n      style=\"width: 100%;\"\r\n      :style=\"{height: height+'px'}\"\r\n      fit=\"cover\"\r\n      loading=\"eager\"/>\r\n<!--    <slot name=\"error\">123</slot>-->\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useElementSize } from '@vueuse/core'\r\nimport {ref, reactive, useTemplateRef, onMounted} from 'vue';\r\n\r\nexport default {\r\n  name: 'app-square-image',\r\n  props: ['img'],\r\n  setup() {\r\n    const height = ref(null)\r\n    const input = useTemplateRef('ele')\r\n    onMounted(() => {\r\n      const e = document.getElementsByClassName('my-face-item')[0]\r\n      height.value = input?.value?.offsetWidth\r\n    })\r\n\r\n    return {\r\n      height,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.my-face-item {\r\n  position: relative;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  background: #9f9f87;\r\n  //background: url(\"/public/face_images/1/3/1.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-size: 100% 100%;\r\n}\r\n.el-image__error {\r\n  display: none!important;\r\n}\r\n.el-image {\r\n  background: var(--app-black);\r\n}\r\n</style>\r\n","<template>\r\n  <div >\r\n\r\n    <h1>My Faces</h1>\r\n\r\n    <p>\r\n      {{ store.getUser?.subscriptionFacesCount - store.getUser?.facesCount }}\r\n      /\r\n      {{ store.getUser?.subscriptionFacesCount }} faces uploaded</p>\r\n<!--    <nuxt-link :to=\"{ name: 'myFaces-create' }\"> Create model </nuxt-link> <br>-->\r\n\r\n    <div class=\"app-base-border-radius app-base-margin-top-bottom\" style=\"width: 100%\"/>\r\n\r\n    <el-row :gutter=\"15\" >\r\n      <el-col :span=\"6\" :xs=\"12\" >\r\n        <nuxt-link class=\"my-faces-item\" :to=\"{ name: 'myFaces-create'}\">\r\n          <app-square-image>\r\n            <div class=\"myFaces-create-item-btm\">\r\n              <img src=\"/icon/icon-plus.png\">\r\n              <span>Create new face</span>\r\n            </div>\r\n          </app-square-image>\r\n        </nuxt-link>\r\n      </el-col>\r\n      <el-col :span=\"6\" :xs=\"12\" v-for=\"item in searchResult.items\" >\r\n        <nuxt-link class=\"my-faces-item\" :to=\"{ name: 'index', query: { face: item.id }}\">\r\n          <app-square-image :img=\"item.coverImageUrl\"></app-square-image>\r\n          <p>{{ item.faceName }}</p>\r\n          <div v-if=\"item.generatedCount > 0\">\r\n            <span>{{ item.generatedCount }} photos generated</span>\r\n          </div>\r\n          <div v-else-if=\"item.trainingStatus === 'InProgress'\" >\r\n            <span>{{ item.generatedCount }} photos.</span>\r\n          </div>\r\n          <div v-else >\r\n            <span>{{ item.generatedCount }} photos.</span>\r\n            <span class=\"app-orange-text\">Generate</span>\r\n          </div>\r\n          <p>trainingStatus: {{ item.trainingStatus }}</p>\r\n        </nuxt-link>\r\n      </el-col>\r\n    </el-row>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useAuthStore } from '~/composables/stores/useAuthStore';\r\nimport {apiFetchGet, useApiFetch} from '#imports';\r\nimport {ref, reactive, useTemplateRef} from 'vue';\r\nimport {SearchForm} from '~/model/search.form';\r\nimport {PaginationResult} from '~/model/pagination.result';\r\nimport { useElementSize } from '@vueuse/core'\r\n\r\ndefinePageMeta({  });\r\n\r\nexport default {\r\n  components: {},\r\n  setup() {\r\n    const store = useAuthStore();\r\n\r\n    const searchResult = ref<PaginationResult>(new PaginationResult());\r\n    const searchForm = ref<SearchForm>(new SearchForm());\r\n    searchForm.value.limit = 5000\r\n\r\n    const getList = async (params: SearchForm) => {\r\n      searchForm.value = params;\r\n      searchResult.value = await apiFetchGet<PaginationResult>('/face', searchForm.value);\r\n    };\r\n\r\n    getList(searchForm.value);\r\n\r\n    return {\r\n      store,\r\n      searchForm,\r\n      searchResult,\r\n      getList,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n.my-faces-item {\r\n  //background: yellow;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: var(--app-white);\r\n  span {\r\n    text-align: center;\r\n    //display: block;\r\n    width: 100%;\r\n    color: var(--app-grey-text-footer);\r\n  }\r\n}\r\n.myFaces-create-item-btm {\r\n  img {\r\n    width: 55px;\r\n    height: 55px;\r\n  }\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 35%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  color: var(--app-white);\r\n  span {\r\n    color: var(--app-white);\r\n  }\r\n}\r\n\r\n</style>\r\n","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/icon/icon-plus.png\")","<template>\r\n  <div >\r\n\r\n    <h1>My Faces</h1>\r\n\r\n    <p>\r\n      {{ store.getUser?.subscriptionFacesCount - store.getUser?.facesCount }}\r\n      /\r\n      {{ store.getUser?.subscriptionFacesCount }} faces uploaded</p>\r\n<!--    <nuxt-link :to=\"{ name: 'myFaces-create' }\"> Create model </nuxt-link> <br>-->\r\n\r\n    <div class=\"app-base-border-radius app-base-margin-top-bottom\" style=\"width: 100%\"/>\r\n\r\n    <el-row :gutter=\"15\" >\r\n      <el-col :span=\"6\" :xs=\"12\" >\r\n        <nuxt-link class=\"my-faces-item\" :to=\"{ name: 'myFaces-create'}\">\r\n          <app-square-image>\r\n            <div class=\"myFaces-create-item-btm\">\r\n              <img src=\"/icon/icon-plus.png\">\r\n              <span>Create new face</span>\r\n            </div>\r\n          </app-square-image>\r\n        </nuxt-link>\r\n      </el-col>\r\n      <el-col :span=\"6\" :xs=\"12\" v-for=\"item in searchResult.items\" >\r\n        <nuxt-link class=\"my-faces-item\" :to=\"{ name: 'index', query: { face: item.id }}\">\r\n          <app-square-image :img=\"item.coverImageUrl\"></app-square-image>\r\n          <p>{{ item.faceName }}</p>\r\n          <div v-if=\"item.generatedCount > 0\">\r\n            <span>{{ item.generatedCount }} photos generated</span>\r\n          </div>\r\n          <div v-else-if=\"item.trainingStatus === 'InProgress'\" >\r\n            <span>{{ item.generatedCount }} photos.</span>\r\n          </div>\r\n          <div v-else >\r\n            <span>{{ item.generatedCount }} photos.</span>\r\n            <span class=\"app-orange-text\">Generate</span>\r\n          </div>\r\n          <p>trainingStatus: {{ item.trainingStatus }}</p>\r\n        </nuxt-link>\r\n      </el-col>\r\n    </el-row>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useAuthStore } from '~/composables/stores/useAuthStore';\r\nimport {apiFetchGet, useApiFetch} from '#imports';\r\nimport {ref, reactive, useTemplateRef} from 'vue';\r\nimport {SearchForm} from '~/model/search.form';\r\nimport {PaginationResult} from '~/model/pagination.result';\r\nimport { useElementSize } from '@vueuse/core'\r\n\r\ndefinePageMeta({  });\r\n\r\nexport default {\r\n  components: {},\r\n  setup() {\r\n    const store = useAuthStore();\r\n\r\n    const searchResult = ref<PaginationResult>(new PaginationResult());\r\n    const searchForm = ref<SearchForm>(new SearchForm());\r\n    searchForm.value.limit = 5000\r\n\r\n    const getList = async (params: SearchForm) => {\r\n      searchForm.value = params;\r\n      searchResult.value = await apiFetchGet<PaginationResult>('/face', searchForm.value);\r\n    };\r\n\r\n    getList(searchForm.value);\r\n\r\n    return {\r\n      store,\r\n      searchForm,\r\n      searchResult,\r\n      getList,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n.my-faces-item {\r\n  //background: yellow;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: var(--app-white);\r\n  span {\r\n    text-align: center;\r\n    //display: block;\r\n    width: 100%;\r\n    color: var(--app-grey-text-footer);\r\n  }\r\n}\r\n.myFaces-create-item-btm {\r\n  img {\r\n    width: 55px;\r\n    height: 55px;\r\n  }\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 35%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  color: var(--app-white);\r\n  span {\r\n    color: var(--app-white);\r\n  }\r\n}\r\n\r\n</style>\r\n"],"names":["__nuxt_component_0","_ssrRenderAttrs","_mergeProps","_ssrRenderComponent","_withCtx","_scopeId","_createVNode","_ssrRenderList","_toDisplayString","_openBlock","_createBlock","_Fragment","_renderList"],"mappings":"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"}