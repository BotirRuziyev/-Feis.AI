{"file":"index-O364zm76.js","mappings":"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","names":["__el_directive_0","_ssrRenderAttrs","_ssrRenderStyle","_ssrRenderComponent","_withCtx","_ssrGetDirectiveProps","_createVNode","_createTextVNode","_withDirectives","_openBlock","_createBlock"],"sources":["../../../../pages/notificationsSettings/index.vue","../../../../pages/notificationsSettings/index.vue"],"sourcesContent":["<template>\r\n  <div >\r\n    <h1>Notifications settings</h1>\r\n    <div class=\"app-base-border-radius app-base-margin-top-bottom\" style=\"width: 100%\"/>\r\n\r\n    <el-row :gutter=\"15\">\r\n      <el-col :span=\"12\" :xs=\"24\">\r\n\r\n        <el-form\r\n          class=\"\"\r\n          v-loading=\"loading\"\r\n          label-position=\"top\"\r\n          ref=\"formRuleRef\"\r\n          :model=\"form\"\r\n          :rules=\"formRules\">\r\n\r\n          <el-form-item prop=\"message\" label=\"Notify me when the AI Face Finished training\">\r\n            <el-checkbox v-model=\"form.finishedTrainingNotifyViaEmail\">Notify via email</el-checkbox>\r\n            <el-checkbox v-model=\"form.finishedTrainingNotifyViaPush\">Push notifications</el-checkbox>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"message\" label=\"Notify me when Image Finished generating\">\r\n            <el-checkbox v-model=\"form.finishedGeneratingNotifyViaEmail\">Notify via email</el-checkbox>\r\n            <el-checkbox v-model=\"form.finishedGeneratingNotifyViaPush\">Push notifications</el-checkbox>\r\n          </el-form-item>\r\n\r\n          <el-col :span=\"12\" :xs=\"24\">\r\n            <el-button @click=\"submitForm\" type=\"primary\" size=\"large\" >Save</el-button>\r\n          </el-col>\r\n\r\n        </el-form>\r\n\r\n      </el-col>\r\n    </el-row>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useAuthStore } from '~/composables/stores/useAuthStore';\r\nimport {apiFetchGet, required, useApiFetch, useValidateForm} from '#imports';\r\nimport {ref, reactive} from 'vue';\r\nimport {SearchForm} from '~/model/search.form';\r\nimport {PaginationResult} from '~/model/pagination.result';\r\nimport type {FormInstance, FormRules} from \"element-plus\";\r\n\r\ndefinePageMeta({  });\r\n\r\nexport default {\r\n  components: {},\r\n  setup() {\r\n    const store = useAuthStore();\r\n    const loading = ref(false)\r\n\r\n    const formRules = reactive<FormRules>({\r\n\r\n    });\r\n    const formRuleRef = ref<FormInstance>();\r\n    const form = reactive<any>({\r\n      finishedTrainingNotifyViaEmail: store.getUser.finishedTrainingNotifyViaEmail,\r\n      finishedTrainingNotifyViaPush: store.getUser.finishedTrainingNotifyViaPush,\r\n      finishedGeneratingNotifyViaEmail: store.getUser.finishedGeneratingNotifyViaEmail,\r\n      finishedGeneratingNotifyViaPush: store.getUser.finishedGeneratingNotifyViaPush\r\n    });\r\n\r\n    const submitForm = async () => {\r\n      if (await useValidateForm(formRuleRef.value)) {\r\n        loading.value = true\r\n\r\n        const {data, error} = await useApiFetch<any>(`/user/updateUserSettings`, 'PATCH', {...form});\r\n        if (!error.value) {}\r\n\r\n        await store.getUserApi()\r\n\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      store,\r\n      loading,\r\n      formRules,\r\n      form,\r\n      formRuleRef,\r\n      submitForm,\r\n\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n","<template>\r\n  <div >\r\n    <h1>Notifications settings</h1>\r\n    <div class=\"app-base-border-radius app-base-margin-top-bottom\" style=\"width: 100%\"/>\r\n\r\n    <el-row :gutter=\"15\">\r\n      <el-col :span=\"12\" :xs=\"24\">\r\n\r\n        <el-form\r\n          class=\"\"\r\n          v-loading=\"loading\"\r\n          label-position=\"top\"\r\n          ref=\"formRuleRef\"\r\n          :model=\"form\"\r\n          :rules=\"formRules\">\r\n\r\n          <el-form-item prop=\"message\" label=\"Notify me when the AI Face Finished training\">\r\n            <el-checkbox v-model=\"form.finishedTrainingNotifyViaEmail\">Notify via email</el-checkbox>\r\n            <el-checkbox v-model=\"form.finishedTrainingNotifyViaPush\">Push notifications</el-checkbox>\r\n          </el-form-item>\r\n\r\n          <el-form-item prop=\"message\" label=\"Notify me when Image Finished generating\">\r\n            <el-checkbox v-model=\"form.finishedGeneratingNotifyViaEmail\">Notify via email</el-checkbox>\r\n            <el-checkbox v-model=\"form.finishedGeneratingNotifyViaPush\">Push notifications</el-checkbox>\r\n          </el-form-item>\r\n\r\n          <el-col :span=\"12\" :xs=\"24\">\r\n            <el-button @click=\"submitForm\" type=\"primary\" size=\"large\" >Save</el-button>\r\n          </el-col>\r\n\r\n        </el-form>\r\n\r\n      </el-col>\r\n    </el-row>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useAuthStore } from '~/composables/stores/useAuthStore';\r\nimport {apiFetchGet, required, useApiFetch, useValidateForm} from '#imports';\r\nimport {ref, reactive} from 'vue';\r\nimport {SearchForm} from '~/model/search.form';\r\nimport {PaginationResult} from '~/model/pagination.result';\r\nimport type {FormInstance, FormRules} from \"element-plus\";\r\n\r\ndefinePageMeta({  });\r\n\r\nexport default {\r\n  components: {},\r\n  setup() {\r\n    const store = useAuthStore();\r\n    const loading = ref(false)\r\n\r\n    const formRules = reactive<FormRules>({\r\n\r\n    });\r\n    const formRuleRef = ref<FormInstance>();\r\n    const form = reactive<any>({\r\n      finishedTrainingNotifyViaEmail: store.getUser.finishedTrainingNotifyViaEmail,\r\n      finishedTrainingNotifyViaPush: store.getUser.finishedTrainingNotifyViaPush,\r\n      finishedGeneratingNotifyViaEmail: store.getUser.finishedGeneratingNotifyViaEmail,\r\n      finishedGeneratingNotifyViaPush: store.getUser.finishedGeneratingNotifyViaPush\r\n    });\r\n\r\n    const submitForm = async () => {\r\n      if (await useValidateForm(formRuleRef.value)) {\r\n        loading.value = true\r\n\r\n        const {data, error} = await useApiFetch<any>(`/user/updateUserSettings`, 'PATCH', {...form});\r\n        if (!error.value) {}\r\n\r\n        await store.getUserApi()\r\n\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      store,\r\n      loading,\r\n      formRules,\r\n      form,\r\n      formRuleRef,\r\n      submitForm,\r\n\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n"],"version":3}